/*	=================== fillBoard ====================	Position chess queens on game board so that no queen 	can capture any other queen.	   Pre  boardSize number of rows & columns on board	   Post Queens’ positions filled*/void fillBoard (STACK* stack, int boardSize){//	Local Definitions 	int  row;	int  col;	int  board[9][9] = {0};  // 0 no queen: 1 queen 	                         // row 0 & col 0 !used 	POSITION* pPos;//	Statements 	row = 1;	col = 0;		while (row <= boardSize)	  {	   while (col <= boardSize && row <= boardSize)	     {	      col++;	      if (!guarded(board, row, col, boardSize))	         {	          board[row][col] = 1;	          pPos = (POSITION*)malloc(sizeof(POSITION));	          pPos->row = row;	          pPos->col = col;	            	          pushStack(stack, pPos);	          	          row++;	          col = 0;	         } // if 	       while (col >= boardSize)	         {	          pPos = popStack(stack);	          row  = pPos->row;	          col  = pPos->col;	          board[row][col] = 0;	          free (pPos);	         } // while col 	      } // while col 	  } // while row 	return;}	// fillBoard 