/*	===================== guarded ==================	Checks rows, columns, diagonals for guarding queens 	   Pre  board contains current positions for queens	        chkRow & chkCol are position for new queen	        boardSize is number of rows & cols in board	   Post returns true if guarded; false if not*/bool guarded (int board[][9], int chkRow,              int chkCol,     int boardSize){//	Local Definitions 	int row;	int col;	//	Statements 	// Check current col for a queen 	col = chkCol;	for (row = 1; row <= chkRow; row++)	    if (board[row][col] == 1)	       return true;	       	// Check diagonal right-up 	for (row = chkRow - 1, col = chkCol + 1;	     row > 0 && col <= boardSize;	     row--, col++)	    if (board[row][col] == 1)	       return true;	       	// Check diagonal left-up 	for (row = chkRow - 1, col = chkCol - 1;	     row > 0 && col > 0;	     row--, col--)	    if (board[row][col] == 1)	       return true;	       	return false;}	// guarded 