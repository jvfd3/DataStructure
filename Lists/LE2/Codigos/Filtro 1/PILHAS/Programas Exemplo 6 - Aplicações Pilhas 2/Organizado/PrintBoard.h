/*	=================== printBoard ====================	Print positions of chess queens on a game board 	Pre  stack contains positions of queen	     boardSize is the number of rows and columns	Post QueensÕ positions printed*/void printBoard (STACK* stack, int boardSize){//	Local Definitions 	int col;		POSITION* pPos;	STACK*    pOutStack;	//	Statements 	if (emptyStack(stack))	    {	     printf("There are no positions on this board\n");	     return;	    } // if 	    	printf("\nPlace queens in following positions:\n");		// Reverse stack for printing 	pOutStack = createStack ();	while (!emptyStack (stack))	   {	    pPos = popStack (stack);	    pushStack (pOutStack, pPos);	   } // while 		// Now print board 	while (!emptyStack (pOutStack))  	   {	    pPos = popStack (pOutStack);	    printf("Row %d-Col %d: \t|", 	            pPos->row, pPos->col);	    for (col = 1; col <= boardSize; col++)	       {	        if (pPos->col == col)	            printf(" Q |");	        else	            printf("   |");	       } // for 	    printf("\n");	   } // while 	destroyStack(pOutStack);	return;}	// printBoard 